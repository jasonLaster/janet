name: Playwright Tests

on:
  deployment_status:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.deployment.environment || github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "22.x"
  PNPM_VERSION: 9.4.0

jobs:
  test:
    name: "Playwright Tests"
    environment: preview
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm install -g vercel@latest

      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium

      - name: Get Vercel Preview URL
        if: ${{ github.event_name == 'deployment_status' }}
        run: |
          echo "PLAYWRIGHT_TEST_BASE_URL=${{ github.event.deployment_status.target_url }}" >> $GITHUB_ENV
          echo "Testing against Vercel Preview URL: ${{ github.event.deployment_status.target_url }}"

      - name: Run Playwright tests
        run: pnpm test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ env.PLAYWRIGHT_TEST_BASE_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

      - name: Deploy playwright report to Vercel
        if: always()
        run: |
          cd apps/web/playwright-report
          vercel link --project janet-playwright --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --yes --token=${{ secrets.VERCEL_TOKEN }}
